teste
BD_sem_rep <- BD %>% select(MES,NOME_ESPECIE,NOME_CIENTIFICO,QUANT_KGS) %>%
group_by(NOME_ESPECIE) %>%
unique()
teste <- xtabs(~BD_sem_rep$NOME_ESPECIE + BD_sem_rep$MES)
BD_sem_rep <- BD %>% select(MES,NOME_ESPECIE,NOME_CIENTIFICO,QUANT_KGS) %>%
group_by(NOME_ESPECIE)
BD_sem_rep <- BD %>% select(MES,NOME_ESPECIE,NOME_CIENTIFICO,QUANT_KGS) %>%
group_by(NOME_ESPECIE) %>%
summarise(total_weight = sum(QUANT_KGS))
View(BD_sem_rep)
BD_sem_rep <- BD %>% select(MES,NOME_ESPECIE,NOME_CIENTIFICO,QUANT_KGS) %>%
group_by(NOME_ESPECIE, MES) %>%
summarise(total_weight = sum(QUANT_KGS))
View(BD_sem_rep)
library(openxlsx)
install.packages("openxlsx")
library(openxlsx)
# export
write.xlsx(teste, "teste.xlsx", sheetName = "Sheet1", row.names = FALSE)
# export
write.xlsx(teste, "teste.xlsx", sheetName = "Sheet1", rowNames = FALSE)
# export
write.xlsx(BD_sem_rep, "teste.xlsx", sheetName = "Sheet1", rowNames = FALSE)
BD_2 <- BD %>% select(MES,NOME_ESPECIE,NOME_CIENTIFICO,QUANT_KGS) %>%
group_by(NOME_ESPECIE) %>%
summarise(total_weight = sum(QUANT_KGS))
write.xlsx(BD_2, "teste1.xlsx", sheetName = "Sheet1", rowNames = FALSE)
View(BD_2)
teste <- xtabs(~BD_sem_rep$NOME_ESPECIE + BD_sem_rep$MES)
teste
library(tidyverse)
library(ggplot2)
library(readxl)
library(openxlsx)
# Files
BD <- read_xlsx(".\\Dani\\UEvora_Sines_2021.xlsx")
# Files
BD <- read_xlsx(".\\Dani\\UEvora_Sines_2021.xlsx")
# Cleaning data
BD$MES <- as.character(BD$MES)
BD_sem_rep <- BD %>% select(MES,NOME_ESPECIE,NOME_CIENTIFICO,QUANT_KGS) %>%
group_by(NOME_ESPECIE, MES) %>%
summarise(total_weight = sum(QUANT_KGS))
BD_2 <- BD %>% select(MES,NOME_ESPECIE,NOME_CIENTIFICO,QUANT_KGS) %>%
group_by(NOME_ESPECIE) %>%
summarise(total_weight = sum(QUANT_KGS))
teste <- xtabs(~BD_sem_rep$NOME_ESPECIE + BD_sem_rep$MES)
teste
df <- read_csv('https://opendata.ecdc.europa.eu/covid19/nationalcasedeath_eueea_daily_ei/csv/data.csv')
library(readr)
df_clean <- df %>%
# Adding all combinations of date/country to identify gaps in time series
complete(dateRep, countriesAndTerritories) %>%
# Sorting dataset
arrange(countriesAndTerritories, DATERep) %>%
# Converting dateRep as a date and renaming columns
mutate(Date = as.Date(dateRep, format = "%d/%m/%Y"),
Country = countriesAndTerritories,
Cases = cases,
Deaths = deaths)
View(df)
df_clean <- df %>%
# Adding all combinations of date/country to identify gaps in time series
complete(dateRep, countriesAndTerritories) %>%
# Sorting dataset
arrange(countriesAndTerritories, dateRep) %>%
# Converting dateRep as a date and renaming columns
mutate(Date = as.Date(dateRep, format = "%d/%m/%Y"),
Country = countriesAndTerritories,
Cases = cases,
Deaths = deaths)
df_clean <- df_clean %>%
# Time period from March 2021 only
filter(Date > "2021-03-01") %>%
select(Date, country, Cases, Deaths) %>%
group_by(Country, Date) %>%
# Computing nb of Cases per country and date
summarise(Cases = sum(Cases),
Deaths = sum(Deaths))
View(df_clean)
df_clean <- df_clean %>%
# Time period from March 2021 only
filter(Date > "2021-03-01") %>%
select(Date, Country, Cases, Deaths) %>%
group_by(Country, Date) %>%
# Computing nb of Cases per country and date
summarise(Cases = sum(Cases),
Deaths = sum(Deaths))
df_clean <- df %>%
# Adding all combinations of date/country to identify gaps in time series
complete(dateRep, countriesAndTerritories) %>%
# Sorting dataset
arrange(countriesAndTerritories, dateRep) %>%
# Converting dateRep as a date and renaming columns
mutate(Date = as.Date(dateRep, format = "%d/%m/%Y"),
Country = countriesAndTerritories,
Cases = cases,
Deaths = deaths)
df_clean <- df_clean %>%
# Time period from March 2021 only
filter(Date > "2021-03-01") %>%
select(Date, Country, Cases, Deaths) %>%
group_by(Country, Date) %>%
# Computing nb of Cases per country and date
summarise(Cases = sum(Cases),
Deaths = sum(Deaths)) %>%
# Computing moving average over 7 days of cases and deaths
mutate(Cases_7ddmv = round(rollmean(Cases, k = 7, fill = NA, align = c("right")),0),
Deaths_7ddmv = round(rollmean(Deaths, k = 7, fill = NA, align = c("right")),0),
Cases_logarithm = log(Cases_7ddmv),
Deaths_logarithm = log(Deaths_7ddmv)) %>%
ungroup()
??rollmean
library(zoo)
df_clean <- df_clean %>%
# Time period from March 2021 only
filter(Date > "2021-03-01") %>%
select(Date, Country, Cases, Deaths) %>%
group_by(Country, Date) %>%
# Computing nb of Cases per country and date
summarise(Cases = sum(Cases),
Deaths = sum(Deaths)) %>%
# Computing moving average over 7 days of cases and deaths
mutate(Cases_7ddmv = round(rollmean(Cases, k = 7, fill = NA, align = c("right")),0),
Deaths_7ddmv = round(rollmean(Deaths, k = 7, fill = NA, align = c("right")),0),
Cases_logarithm = log(Cases_7ddmv),
Deaths_logarithm = log(Deaths_7ddmv)) %>%
ungroup()
plot1_cases_7ddmv <- df_clean %>%
ggplot() +
geom_line(mapping = aes(y = Cases_7ddmv,
x = Date), size = 1, na.rm = TRUE) +
scale_x_date(name = "Date of reporting",
date_breaks = "4 weeks",
date_minor_breaks = "1 week",
date_labels = "%d-%m-%Y") +
theme_classic() +
theme(aspect.ratio = 0.5,
axis.text.x = element_text(size = 10,
angle = 90,
vjust = 0.5,
hjust = 0.5),
axis.text.y = element_text(size = 10),
axis.title.y = element_text(size = 12),
strip.text = element_text(size=11),
axis.title.x = element_text(margin = margin(t = 20, r = 0, b = 0, l = 0),
size = 12),
plot.background = element_rect(fill = "transparent", colour = NA)) +
facet_wrap(vars(Country), scales = "free_y", nrow = 5)
plot1_cases_7ddmv
plot2_deaths_7ddmv <- df_clean %>%
ggplot() +
geom_line(mapping = aes(y = Deaths_7ddmv,
x = Date), size = 1, na.rm = TRUE) +
scale_x_date(name = "Date of reporting",
date_breaks = "4 weeks",
date_minor_breaks = "1 week",
date_labels = "%d-%m-%Y") +
theme_classic() +
theme(aspect.ratio = 0.5,
axis.text.x = element_text(size = 10,
angle = 90,
vjust = 0.5,
hjust = 0.5),
axis.text.y = element_text(size = 10),
axis.title.y = element_text(size = 12),
strip.text = element_text(size=11),
axis.title.x = element_text(margin = margin(t = 20, r = 0, b = 0, l = 0),
size = 12),
plot.background = element_rect(fill = "transparent", colour = NA)) +
facet_wrap(vars(Country), scales = "free_y", nrow = 5)
plot2_deaths_7ddmv
View(df_clean)
plot1_cases_7ddmv <- df_clean %>%
ggplot() +
geom_line(mapping = aes(y = (Cases_7ddmv == "Portugal" | "Spain" | "France"),
x = Date), size = 1, na.rm = TRUE) +
scale_x_date(name = "Date of reporting",
date_breaks = "4 weeks",
date_minor_breaks = "1 week",
date_labels = "%d-%m-%Y") +
theme_classic() +
theme(aspect.ratio = 0.5,
axis.text.x = element_text(size = 10,
angle = 90,
vjust = 0.5,
hjust = 0.5),
axis.text.y = element_text(size = 10),
axis.title.y = element_text(size = 12),
strip.text = element_text(size=11),
axis.title.x = element_text(margin = margin(t = 20, r = 0, b = 0, l = 0),
size = 12),
plot.background = element_rect(fill = "transparent", colour = NA)) +
facet_wrap(vars(Country), scales = "free_y", nrow = 5)
plot1_cases_7ddmv
plot1_cases_7ddmv <- df_clean %>%
ggplot() +
geom_line(mapping = aes(y = (Cases_7ddmv = "Portugal" | "Spain" | "France"),
x = Date), size = 1, na.rm = TRUE) +
scale_x_date(name = "Date of reporting",
date_breaks = "4 weeks",
date_minor_breaks = "1 week",
date_labels = "%d-%m-%Y") +
theme_classic() +
theme(aspect.ratio = 0.5,
axis.text.x = element_text(size = 10,
angle = 90,
vjust = 0.5,
hjust = 0.5),
axis.text.y = element_text(size = 10),
axis.title.y = element_text(size = 12),
strip.text = element_text(size=11),
axis.title.x = element_text(margin = margin(t = 20, r = 0, b = 0, l = 0),
size = 12),
plot.background = element_rect(fill = "transparent", colour = NA)) +
facet_wrap(vars(Country), scales = "free_y", nrow = 5)
plot1_cases_7ddmv
plot1_cases_7ddmv <- df_clean %>%
ggplot() +
geom_line(mapping = aes(y = Cases_7ddmv,
x = Date), size = 1, na.rm = TRUE) +
scale_x_date(name = "Date of reporting",
date_breaks = "4 weeks",
date_minor_breaks = "1 week",
date_labels = "%d-%m-%Y") +
theme_classic() +
theme(aspect.ratio = 0.5,
axis.text.x = element_text(size = 10,
angle = 90,
vjust = 0.5,
hjust = 0.5),
axis.text.y = element_text(size = 10),
axis.title.y = element_text(size = 12),
strip.text = element_text(size=11),
axis.title.x = element_text(margin = margin(t = 20, r = 0, b = 0, l = 0),
size = 12),
plot.background = element_rect(fill = "transparent", colour = NA)) +
facet_wrap(vars(Country), scales = "free_y", nrow = 5)
plot1_cases_7ddmv
plot1_cases_7ddmv <- df_clean %>%
ggplot() +
geom_line(mapping = aes(y = Cases_7ddmv,
x = Date), size = 1, na.rm = TRUE) +
scale_x_date(name = "Date of reporting",
date_breaks = "4 weeks",
date_minor_breaks = "1 week",
date_labels = "%d-%m-%Y") +
theme_classic() +
theme(aspect.ratio = 0.5,
axis.text.x = element_text(size = 10,
angle = 90,
vjust = 0.5,
hjust = 0.5),
axis.text.y = element_text(size = 10),
axis.title.y = element_text(size = 12),
strip.text = element_text(size=11),
axis.title.x = element_text(margin = margin(t = 20, r = 0, b = 0, l = 0),
size = 12),
plot.background = element_rect(fill = "transparent", colour = NA)) +
facet_wrap(vars(Country == "Portugal"), scales = "free_y", nrow = 5)
plot1_cases_7ddmv
plot1_cases_7ddmv <- df_clean %>%
ggplot() +
geom_line(mapping = aes(y = Cases_7ddmv,
x = Date), size = 1, na.rm = TRUE) +
scale_x_date(name = "Date of reporting",
date_breaks = "4 weeks",
date_minor_breaks = "1 week",
date_labels = "%d-%m-%Y") +
theme_classic() +
theme(aspect.ratio = 0.5,
axis.text.x = element_text(size = 10,
angle = 90,
vjust = 0.5,
hjust = 0.5),
axis.text.y = element_text(size = 10),
axis.title.y = element_text(size = 12),
strip.text = element_text(size=11),
axis.title.x = element_text(margin = margin(t = 20, r = 0, b = 0, l = 0),
size = 12),
plot.background = element_rect(fill = "transparent", colour = NA)) +
facet_wrap(vars(Country == "Portugal"| "Spain" | "France"), scales = "free_y", nrow = 5)
plot1_cases_7ddmv
plot1_cases_7ddmv <- df_clean %>%
ggplot() +
geom_line(mapping = aes(y = Cases_7ddmv,
x = Date), size = 1, na.rm = TRUE) +
scale_x_date(name = "Date of reporting",
date_breaks = "4 weeks",
date_minor_breaks = "1 week",
date_labels = "%d-%m-%Y") +
theme_classic() +
theme(aspect.ratio = 0.5,
axis.text.x = element_text(size = 10,
angle = 90,
vjust = 0.5,
hjust = 0.5),
axis.text.y = element_text(size = 10),
axis.title.y = element_text(size = 12),
strip.text = element_text(size=11),
axis.title.x = element_text(margin = margin(t = 20, r = 0, b = 0, l = 0),
size = 12),
plot.background = element_rect(fill = "transparent", colour = NA)) +
facet_wrap(vars(Country == "Portugal", "Spain", "France"), scales = "free_y", nrow = 5)
plot1_cases_7ddmv
plot1_cases_7ddmv <- df_clean %>%
ggplot() +
geom_line(mapping = aes(y = Cases_7ddmv,
x = Date), size = 1, na.rm = TRUE) +
scale_x_date(name = "Date of reporting",
date_breaks = "4 weeks",
date_minor_breaks = "1 week",
date_labels = "%d-%m-%Y") +
theme_classic() +
theme(aspect.ratio = 0.5,
axis.text.x = element_text(size = 10,
angle = 90,
vjust = 0.5,
hjust = 0.5),
axis.text.y = element_text(size = 10),
axis.title.y = element_text(size = 12),
strip.text = element_text(size=11),
axis.title.x = element_text(margin = margin(t = 20, r = 0, b = 0, l = 0),
size = 12),
plot.background = element_rect(fill = "transparent", colour = NA)) +
facet_wrap(vars(Country), scales = "free_y", nrow = 5)
plot1_cases_7ddmv
plot1_cases_7ddmv <- df_clean %>%
ggplot() +
geom_line(mapping = aes(y = Cases_7ddmv,
x = Date), size = 1, na.rm = TRUE) +
scale_x_date(name = "Date of reporting",
date_breaks = "4 weeks",
date_minor_breaks = "1 week",
date_labels = "%d-%m-%Y") +
theme_classic() +
theme(aspect.ratio = 0.5,
axis.text.x = element_text(size = 10,
angle = 90,
vjust = 0.5,
hjust = 0.5),
axis.text.y = element_text(size = 10),
axis.title.y = element_text(size = 12),
strip.text = element_text(size=11),
axis.title.x = element_text(margin = margin(t = 20, r = 0, b = 0, l = 0),
size = 12),
plot.background = element_rect(fill = "transparent", colour = NA)) +
facet_wrap(vars(Country = "Portugal"), scales = "free_y", nrow = 5)
plot1_cases_7ddmv
plot1_cases_7ddmv <- df_clean %>%
ggplot() +
geom_line(mapping = aes(y = Cases_7ddmv,
x = Date), size = 1, na.rm = TRUE) +
scale_x_date(name = "Date of reporting",
date_breaks = "4 weeks",
date_minor_breaks = "1 week",
date_labels = "%d-%m-%Y") +
theme_classic() +
theme(aspect.ratio = 0.5,
axis.text.x = element_text(size = 10,
angle = 90,
vjust = 0.5,
hjust = 0.5),
axis.text.y = element_text(size = 10),
axis.title.y = element_text(size = 12),
strip.text = element_text(size=11),
axis.title.x = element_text(margin = margin(t = 20, r = 0, b = 0, l = 0),
size = 12),
plot.background = element_rect(fill = "transparent", colour = NA)) +
facet_wrap(vars(Country = "Portugal", "Spain", "France"), scales = "free_y", nrow = 5)
plot1_cases_7ddmv
plot1_cases_7ddmv <- df_clean %>%
ggplot() +
geom_line(mapping = aes(y = Cases_7ddmv,
x = Date), size = 1, na.rm = TRUE) +
scale_x_date(name = "Date of reporting",
date_breaks = "4 weeks",
date_minor_breaks = "1 week",
date_labels = "%d-%m-%Y") +
theme_classic() +
theme(aspect.ratio = 0.5,
axis.text.x = element_text(size = 10,
angle = 90,
vjust = 0.5,
hjust = 0.5),
axis.text.y = element_text(size = 10),
axis.title.y = element_text(size = 12),
strip.text = element_text(size=11),
axis.title.x = element_text(margin = margin(t = 20, r = 0, b = 0, l = 0),
size = 12),
plot.background = element_rect(fill = "transparent", colour = NA)) +
facet_wrap(vars(Country = "Portugal"), scales = "free_y", nrow = 5)
plot1_cases_7ddmv
plot1_cases_7ddmv <- df_clean %>%
ggplot() +
geom_line(mapping = aes(y = Cases_7ddmv,
x = Date), size = 1, na.rm = TRUE) +
scale_x_date(name = "Date of reporting",
date_breaks = "4 weeks",
date_minor_breaks = "1 week",
date_labels = "%d-%m-%Y") +
theme_classic() +
theme(aspect.ratio = 0.5,
axis.text.x = element_text(size = 10,
angle = 90,
vjust = 0.5,
hjust = 0.5),
axis.text.y = element_text(size = 10),
axis.title.y = element_text(size = 12),
strip.text = element_text(size=11),
axis.title.x = element_text(margin = margin(t = 20, r = 0, b = 0, l = 0),
size = 12),
plot.background = element_rect(fill = "transparent", colour = NA)) +
facet_wrap(vars(Country = "PSpain"), scales = "free_y", nrow = 5)
plot1_cases_7ddmv
plot1_cases_7ddmv <- df_clean %>%
ggplot() +
geom_line(mapping = aes(y = Cases_7ddmv,
x = Date), size = 1, na.rm = TRUE) +
scale_x_date(name = "Date of reporting",
date_breaks = "4 weeks",
date_minor_breaks = "1 week",
date_labels = "%d-%m-%Y") +
theme_classic() +
theme(aspect.ratio = 0.5,
axis.text.x = element_text(size = 10,
angle = 90,
vjust = 0.5,
hjust = 0.5),
axis.text.y = element_text(size = 10),
axis.title.y = element_text(size = 12),
strip.text = element_text(size=11),
axis.title.x = element_text(margin = margin(t = 20, r = 0, b = 0, l = 0),
size = 12),
plot.background = element_rect(fill = "transparent", colour = NA)) +
facet_wrap(vars(Country), scales = "free_y", nrow = 5)
plot1_cases_7ddmv
plot1_cases_7ddmv <- df_clean %>%
subset(Country %in% c("Portugal", "Spain", "France"))
plot1_cases_7ddmv <- df_clean %>%
subset(Country %in% c("Portugal", "Spain", "France")) %>%
ggplot() +
geom_line(mapping = aes(y = Cases_7ddmv,
x = Date), size = 1, na.rm = TRUE) +
scale_x_date(name = "Date of reporting",
date_breaks = "4 weeks",
date_minor_breaks = "1 week",
date_labels = "%d-%m-%Y") +
theme_classic() +
theme(aspect.ratio = 0.5,
axis.text.x = element_text(size = 10,
angle = 90,
vjust = 0.5,
hjust = 0.5),
axis.text.y = element_text(size = 10),
axis.title.y = element_text(size = 12),
strip.text = element_text(size=11),
axis.title.x = element_text(margin = margin(t = 20, r = 0, b = 0, l = 0),
size = 12),
plot.background = element_rect(fill = "transparent", colour = NA)) +
facet_wrap(vars(Country), scales = "free_y", nrow = 5)
plot1_cases_7ddmv
teste
View(BD_sem_rep)
library(tidyverse)
library(ggplot2)
library(readxl)
library(openxlsx)
# Files
BD <- read_xlsx(".\\Dani\\UEvora_Sines_2021.xlsx")
# Cleaning data
BD$MES <- as.character(BD$MES)
BD_sem_rep <- BD %>% select(MES,NOME_ESPECIE,NOME_CIENTIFICO,QUANT_KGS) %>%
group_by(NOME_ESPECIE, MES) %>%
summarise(total_weight = sum(QUANT_KGS))
View(BD_sem_rep)
BD_2 <- BD %>% select(MES,NOME_ESPECIE,NOME_CIENTIFICO,QUANT_KGS) %>%
group_by(NOME_ESPECIE) %>%
summarise(total_weight = sum(QUANT_KGS))
View(BD_2)
teste <- xtabs(~BD_sem_rep$NOME_ESPECIE + BD_sem_rep$MES)
teste
teste <- data.frame(xtabs(~BD_sem_rep$NOME_ESPECIE + BD_sem_rep$MES))
teste
View(teste)
teste <- xtabs(~BD_sem_rep$NOME_ESPECIE + BD_sem_rep$MES)
teste
teste <- data.frame(xtabs(~BD_sem_rep$NOME_ESPECIE + BD_sem_rep$MES)) %>%
pivot_wider(names_from = MES, values_from = BD_sem_rep$NOME_ESPECIE)
teste <- data.frame(xtabs(~BD_sem_rep$NOME_ESPECIE + BD_sem_rep$MES)) %>%
pivot_wider(names_from = BD_sem_rep$MES, values_from = BD_sem_rep$NOME_ESPECIE)
teste <- data.frame(xtabs(~BD_sem_rep$NOME_ESPECIE + BD_sem_rep$MES))
View(teste)
teste <- data.frame(xtabs(~BD_sem_rep$NOME_ESPECIE + BD_sem_rep$MES)) %>%
pivot_wider(names_from = BD_sem_rep.MES , values_from = Freq )
teste
View(teste)
# Ocorrencia de espécies por mês (1=sim, 0= nao)
species_month <- data.frame(xtabs(~BD_sem_rep$NOME_ESPECIE + BD_sem_rep$MES)) %>%
pivot_wider(names_from = BD_sem_rep.MES , values_from = Freq )
species_month
rm(teste)
View(species_month)
View(BD_2)
View(BD_sem_rep)
#
x <- data.frame(xtabs(~BD_sem_rep$NOME_ESPECIE + BD_sem_rep$MES)
#
x <- data.frame(xtabs(~BD_sem_rep$NOME_ESPECIE + BD_sem_rep$MES))
decomp <- decompose(x$Freq)
rm(x)
