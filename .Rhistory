plot1_cases_7ddmv <- df_clean %>%
ggplot() +
geom_line(mapping = aes(y = Cases_7ddmv,
x = Date), size = 1, na.rm = TRUE) +
scale_x_date(name = "Date of reporting",
date_breaks = "4 weeks",
date_minor_breaks = "1 week",
date_labels = "%d-%m-%Y") +
theme_classic() +
theme(aspect.ratio = 0.5,
axis.text.x = element_text(size = 10,
angle = 90,
vjust = 0.5,
hjust = 0.5),
axis.text.y = element_text(size = 10),
axis.title.y = element_text(size = 12),
strip.text = element_text(size=11),
axis.title.x = element_text(margin = margin(t = 20, r = 0, b = 0, l = 0),
size = 12),
plot.background = element_rect(fill = "transparent", colour = NA)) +
facet_wrap(vars(Country), scales = "free_y", nrow = 5)
plot1_cases_7ddmv
plot1_cases_7ddmv <- df_clean %>%
ggplot() +
geom_line(mapping = aes(y = Cases_7ddmv,
x = Date), size = 1, na.rm = TRUE) +
scale_x_date(name = "Date of reporting",
date_breaks = "4 weeks",
date_minor_breaks = "1 week",
date_labels = "%d-%m-%Y") +
theme_classic() +
theme(aspect.ratio = 0.5,
axis.text.x = element_text(size = 10,
angle = 90,
vjust = 0.5,
hjust = 0.5),
axis.text.y = element_text(size = 10),
axis.title.y = element_text(size = 12),
strip.text = element_text(size=11),
axis.title.x = element_text(margin = margin(t = 20, r = 0, b = 0, l = 0),
size = 12),
plot.background = element_rect(fill = "transparent", colour = NA)) +
facet_wrap(vars(Country = "Portugal"), scales = "free_y", nrow = 5)
plot1_cases_7ddmv
plot1_cases_7ddmv <- df_clean %>%
ggplot() +
geom_line(mapping = aes(y = Cases_7ddmv,
x = Date), size = 1, na.rm = TRUE) +
scale_x_date(name = "Date of reporting",
date_breaks = "4 weeks",
date_minor_breaks = "1 week",
date_labels = "%d-%m-%Y") +
theme_classic() +
theme(aspect.ratio = 0.5,
axis.text.x = element_text(size = 10,
angle = 90,
vjust = 0.5,
hjust = 0.5),
axis.text.y = element_text(size = 10),
axis.title.y = element_text(size = 12),
strip.text = element_text(size=11),
axis.title.x = element_text(margin = margin(t = 20, r = 0, b = 0, l = 0),
size = 12),
plot.background = element_rect(fill = "transparent", colour = NA)) +
facet_wrap(vars(Country = "Portugal", "Spain", "France"), scales = "free_y", nrow = 5)
plot1_cases_7ddmv
plot1_cases_7ddmv <- df_clean %>%
ggplot() +
geom_line(mapping = aes(y = Cases_7ddmv,
x = Date), size = 1, na.rm = TRUE) +
scale_x_date(name = "Date of reporting",
date_breaks = "4 weeks",
date_minor_breaks = "1 week",
date_labels = "%d-%m-%Y") +
theme_classic() +
theme(aspect.ratio = 0.5,
axis.text.x = element_text(size = 10,
angle = 90,
vjust = 0.5,
hjust = 0.5),
axis.text.y = element_text(size = 10),
axis.title.y = element_text(size = 12),
strip.text = element_text(size=11),
axis.title.x = element_text(margin = margin(t = 20, r = 0, b = 0, l = 0),
size = 12),
plot.background = element_rect(fill = "transparent", colour = NA)) +
facet_wrap(vars(Country = "Portugal"), scales = "free_y", nrow = 5)
plot1_cases_7ddmv
plot1_cases_7ddmv <- df_clean %>%
ggplot() +
geom_line(mapping = aes(y = Cases_7ddmv,
x = Date), size = 1, na.rm = TRUE) +
scale_x_date(name = "Date of reporting",
date_breaks = "4 weeks",
date_minor_breaks = "1 week",
date_labels = "%d-%m-%Y") +
theme_classic() +
theme(aspect.ratio = 0.5,
axis.text.x = element_text(size = 10,
angle = 90,
vjust = 0.5,
hjust = 0.5),
axis.text.y = element_text(size = 10),
axis.title.y = element_text(size = 12),
strip.text = element_text(size=11),
axis.title.x = element_text(margin = margin(t = 20, r = 0, b = 0, l = 0),
size = 12),
plot.background = element_rect(fill = "transparent", colour = NA)) +
facet_wrap(vars(Country = "PSpain"), scales = "free_y", nrow = 5)
plot1_cases_7ddmv
plot1_cases_7ddmv <- df_clean %>%
ggplot() +
geom_line(mapping = aes(y = Cases_7ddmv,
x = Date), size = 1, na.rm = TRUE) +
scale_x_date(name = "Date of reporting",
date_breaks = "4 weeks",
date_minor_breaks = "1 week",
date_labels = "%d-%m-%Y") +
theme_classic() +
theme(aspect.ratio = 0.5,
axis.text.x = element_text(size = 10,
angle = 90,
vjust = 0.5,
hjust = 0.5),
axis.text.y = element_text(size = 10),
axis.title.y = element_text(size = 12),
strip.text = element_text(size=11),
axis.title.x = element_text(margin = margin(t = 20, r = 0, b = 0, l = 0),
size = 12),
plot.background = element_rect(fill = "transparent", colour = NA)) +
facet_wrap(vars(Country), scales = "free_y", nrow = 5)
plot1_cases_7ddmv
plot1_cases_7ddmv <- df_clean %>%
subset(Country %in% c("Portugal", "Spain", "France"))
plot1_cases_7ddmv <- df_clean %>%
subset(Country %in% c("Portugal", "Spain", "France")) %>%
ggplot() +
geom_line(mapping = aes(y = Cases_7ddmv,
x = Date), size = 1, na.rm = TRUE) +
scale_x_date(name = "Date of reporting",
date_breaks = "4 weeks",
date_minor_breaks = "1 week",
date_labels = "%d-%m-%Y") +
theme_classic() +
theme(aspect.ratio = 0.5,
axis.text.x = element_text(size = 10,
angle = 90,
vjust = 0.5,
hjust = 0.5),
axis.text.y = element_text(size = 10),
axis.title.y = element_text(size = 12),
strip.text = element_text(size=11),
axis.title.x = element_text(margin = margin(t = 20, r = 0, b = 0, l = 0),
size = 12),
plot.background = element_rect(fill = "transparent", colour = NA)) +
facet_wrap(vars(Country), scales = "free_y", nrow = 5)
plot1_cases_7ddmv
teste
View(BD_sem_rep)
library(tidyverse)
library(ggplot2)
library(readxl)
library(openxlsx)
# Files
BD <- read_xlsx(".\\Dani\\UEvora_Sines_2021.xlsx")
# Cleaning data
BD$MES <- as.character(BD$MES)
BD_sem_rep <- BD %>% select(MES,NOME_ESPECIE,NOME_CIENTIFICO,QUANT_KGS) %>%
group_by(NOME_ESPECIE, MES) %>%
summarise(total_weight = sum(QUANT_KGS))
View(BD_sem_rep)
BD_2 <- BD %>% select(MES,NOME_ESPECIE,NOME_CIENTIFICO,QUANT_KGS) %>%
group_by(NOME_ESPECIE) %>%
summarise(total_weight = sum(QUANT_KGS))
View(BD_2)
teste <- xtabs(~BD_sem_rep$NOME_ESPECIE + BD_sem_rep$MES)
teste
teste <- data.frame(xtabs(~BD_sem_rep$NOME_ESPECIE + BD_sem_rep$MES))
teste
View(teste)
teste <- xtabs(~BD_sem_rep$NOME_ESPECIE + BD_sem_rep$MES)
teste
teste <- data.frame(xtabs(~BD_sem_rep$NOME_ESPECIE + BD_sem_rep$MES)) %>%
pivot_wider(names_from = MES, values_from = BD_sem_rep$NOME_ESPECIE)
teste <- data.frame(xtabs(~BD_sem_rep$NOME_ESPECIE + BD_sem_rep$MES)) %>%
pivot_wider(names_from = BD_sem_rep$MES, values_from = BD_sem_rep$NOME_ESPECIE)
teste <- data.frame(xtabs(~BD_sem_rep$NOME_ESPECIE + BD_sem_rep$MES))
View(teste)
teste <- data.frame(xtabs(~BD_sem_rep$NOME_ESPECIE + BD_sem_rep$MES)) %>%
pivot_wider(names_from = BD_sem_rep.MES , values_from = Freq )
teste
View(teste)
# Ocorrencia de espécies por mês (1=sim, 0= nao)
species_month <- data.frame(xtabs(~BD_sem_rep$NOME_ESPECIE + BD_sem_rep$MES)) %>%
pivot_wider(names_from = BD_sem_rep.MES , values_from = Freq )
species_month
rm(teste)
View(species_month)
View(BD_2)
View(BD_sem_rep)
#
x <- data.frame(xtabs(~BD_sem_rep$NOME_ESPECIE + BD_sem_rep$MES)
#
x <- data.frame(xtabs(~BD_sem_rep$NOME_ESPECIE + BD_sem_rep$MES))
decomp <- decompose(x$Freq)
rm(x)
library(ncdf4)
library(lubridate)
### DATA ###
nc_tmax <- nc_open("./ENSP/tx_ens_mean_0.25deg_reg_2011-2022_v27.0e.nc")
View(nc_tmax)
### DATA CLEANING ###
dim_lon <- ncvar_get(nc_tmax, "longitude")
dim_lat <- ncvar_get(nc_tmax, "latitude")
dim_time <- ncvar_get(nc_tmax, "time")
dim_temp <- ncvar_get(nc_tmax, "tx")
?ncatt_get
t_units <- ncatt_get(nc_tmax, "time", "units")
t_units
t_ustr <- strsplit(t_units$value, " ")
t_dstr <- strsplit(unlist(t_ustr)[3], "-")
date <- ymd(t_dstr)
date
coords <- as.matrix(expand.grid(dim_lon, dim_lat, dim_depth, date))
coords <- as.matrix(expand.grid(dim_lon, dim_lat, date))
?ncvar_get
dim_temp <- ncvar_get(nc_tmax, "tx", collapse_degen=FALSE)
nc_df <- data.frame(cbind(coords, dim_temp))
names(nc_df) <- c("lon", "lat","time", "temp")
head(na.omit(nc_df), 5)  # Display some non-NaN values for a visual check
csv_fname <- "temp_max.csv"
write.table(nc_df, csv_fname, row.names=FALSE, sep=";")
View(nc_tmax)
print(nc_tmax)
time_obs<- as.POSIXct(time, origin = “1981–01–01”, tz=”GMT”)
time_obs<- as.POSIXct(time, origin = "1950–01–01", tz="GMT")
library(tidyverse)
time_obs<- as.POSIXct(time, origin = "1950–01–01", tz="GMT")
time_obs<- as.POSIXct(dim_time, origin = "1950–01–01", tz="GMT")
t_units
dim_time
time_obs<- as.POSIXct(dim_time, origin = "1950–01–01", tz="GMT")
time_obs<- as.POSIXct(date, origin = "1950–01–01", tz="GMT")
lonlattime <- as.matrix(expand.grid(lon,lat,time_obs))
lonlattime <- as.matrix(expand.grid(dim_lon,dim_lat,time_obs))
nc_tmax
fillvalue <- ncatt_get(nc_tmax, "tx", "_FillValue")
dim_temp[dim_temp==fillvalue$value] <- NA
lswt_slice <- dim_temp[ , , 2123]
lswt_slice <- dim_temp[ , , 25]
# and why not, draw it out:
image(dim_lon, dim_lat, lswt_slice)
lswt_vec_long <- as.vector(dim_temp)
lswt_obs <- data.frame(cbind(lonlattime, lswt_vec_long))
head(lswt_obs)
colnames(lswt_obs) <- c(“Long”,”Lat”,”Date”,”Temp_Cel”)
colnames(lswt_obs) <- c("Long","Lat","Date","Temp_Cel")
head(lswt_obs)
lswt_final <- na.omit(lswt_obs)
lswt_final <- na.omit(lswt_obs)
lswt_final$Date <- as.Date(lswt_final$Date)
lswt_final$Temp_Cel<- as.double(lswt_final$Temp_Cel)
lswt_final <- lswt_final %>%
group_by(Date)
lswt_final
dim(lswt_final)
write.csv(as.data.frame(lswt_final), "GloboLakes_Atitlan_TS_95_16.csv", row.names=T)
max(lswt_final$Date)
min(lswt_final$Date)
nc_tmax
attributes(nc_tmax$var)
dim(dim_temp)
length(lswt_vec_long)
dim(lswt_final)
dim(lswt_obs)
lswt_final <- lswt_final %>%
group_by(Date) %>%
summarize(Mean_K = mean(LSWT_Kelvin))
lswt_final <- lswt_final %>%
group_by(Date) %>%
summarize(Mean_K = mean(Temp_Cel))
View(lswt_final)
rm(lswt_final)
lswt_final <- lswt_obs
lswt_final$Date <- as.Date(lswt_final$Date)
lswt_final$Temp_Cel<- as.double(lswt_final$Temp_Cel)
lswt_final
dim(lswt_final)
lswt_final <- lswt_final %>%
group_by(Date) %>%
summarize(Mean_K = mean(Temp_Cel))
max(dim_temp)
max(dim_time)
min(dim_time)
min(date)
max(date)
min(t_dstr)
max(t_units$value)
?strsplit
?dseconds
date <- ymd(t_dstr) + ddays(dim_time)
date
time_obs<- as.POSIXct(date, origin = "1950–01–01", tz="GMT")
lswt_slice <- dim_temp[ , , 2123]
lswt_slice <- dim_temp[ , , 25]
# and why not, draw it out:
image(dim_lon, dim_lat, lswt_slice)
lswt_vec_long <- as.vector(dim_temp)
lonlattime <- as.matrix(expand.grid(dim_lon,dim_lat,time_obs))
max(date)
rm(BD)
rm(BD_2)
rm(BD_sem_rep)
rm(csv_fname)
rm(coords)
rm(teste)
gc()
library(ncdf4)
library(lubridate)
library(tidyverse)
### DATA ###
nc_tmax <- nc_open("./ENSP/tx_ens_mean_0.25deg_reg_2011-2022_v27.0e.nc")
### DATA CLEANING ###
dim_lon <- ncvar_get(nc_tmax, "longitude")
dim_lat <- ncvar_get(nc_tmax, "latitude")
dim_time <- ncvar_get(nc_tmax, "time")
dim_temp <- ncvar_get(nc_tmax, "tx", collapse_degen=FALSE)
fillvalue <- ncatt_get(nc_tmax, "tx", "_FillValue")
dim_temp[dim_temp==fillvalue$value] <- NA
t_units <- ncatt_get(nc_tmax, "time", "units") #days since 1950-01-01 00:00
t_ustr <- strsplit(t_units$value, " ")
t_dstr <- strsplit(unlist(t_ustr)[3], "-")
date <- ymd(t_dstr) + ddays(dim_time)
date
time_obs<- as.POSIXct(date, origin = "1950–01–01", tz="GMT")
lswt_slice <- dim_temp[ , , 2123]
lswt_slice <- dim_temp[ , , 25]
# and why not, draw it out:
image(dim_lon, dim_lat, lswt_slice)
lswt_vec_long <- as.vector(dim_temp)
lonlattime <- as.matrix(expand.grid(dim_lon,dim_lat,time_obs))
memory.limit()
memory.limit(size = 35000)
lonlattime <- as.matrix(expand.grid(dim_lon,dim_lat,time_obs))
remotes::install_github("RS-eco/processNC", build_vignettes=T)
library(processNC)
library(terra)
library(raster)
remotes::install_github("RS-eco/processNC", build_vignettes=T)
remotes::install_github("RS-eco/processNC")
remotes::install_github("RS-eco/processNC")
remotes::install_github("RS-eco/processNC")
library(processNC)
?list.files
files <- list.files("./ENSP/dataset")
files
?subsetNC
teste <- subsetNC(files, startdate = 2017, enddate = 2022)
files <- list.files("./ENSP/dataset",
pattern="pr.*\\.nc", full.names=T)
teste <- subsetNC(files, startdate = 2017, enddate = 2022)
teste <- subsetNC(nc_tmax, startdate = 2017, enddate = 2022)
teste <- subsetNC("./ENSP/tx_ens_mean_0.25deg_reg_2011-2022_v27.0e.nc", startdate = 2017, enddate = 2022)
library(ncdf4)
library(lubridate)
library(tidyverse)
library(processNC)
library(terra)
library(raster)
teste <- subsetNC("./ENSP/tx_ens_mean_0.25deg_reg_2011-2022_v27.0e.nc", startdate = 2017, enddate = 2022)
### DATA ###
nc_tmax <- nc_open("./ENSP/tx_ens_mean_0.25deg_reg_2011-2022_v27.0e.nc")
teste <- subsetNC("./ENSP/tx_ens_mean_0.25deg_reg_2011-2022_v27.0e.nc", startdate = 2017, enddate = 2022)
nc_tmax<- subsetNC("./ENSP/tx_ens_mean_0.25deg_reg_2011-2022_v27.0e.nc", startdate = 2017, enddate = 2022)
### DATA CLEANING ###
dim_lon <- ncvar_get(nc_tmax, "longitude")
### DATA ###
nc_tmax <- nc_open("./ENSP/tx_ens_mean_0.25deg_reg_2011-2022_v27.0e.nc")
View(teste)
dim_lon <- ncvar_get(nc_tmax, "longitude")
dim_lat <- ncvar_get(nc_tmax, "latitude")
dim_time <- ncvar_get(nc_tmax, "time")
dim_temp <- ncvar_get(nc_tmax, "tx", collapse_degen=FALSE)
fillvalue <- ncatt_get(nc_tmax, "tx", "_FillValue")
dim_temp[dim_temp==fillvalue$value] <- NA
t_units <- ncatt_get(nc_tmax, "time", "units") #days since 1950-01-01 00:00
t_ustr <- strsplit(t_units$value, " ")
t_dstr <- strsplit(unlist(t_ustr)[3], "-")
date <- ymd(t_dstr) + ddays(dim_time)
date
time_obs<- as.POSIXct(date, origin = "1950–01–01", tz="GMT")
lswt_slice <- dim_temp[ , , 2123]
lswt_slice <- dim_temp[ , , 25]
# and why not, draw it out:
image(dim_lon, dim_lat, lswt_slice)
lswt_vec_long <- as.vector(dim_temp)
View(lswt_slice)
View(nc_tmax)
?writeCDF
lswt_slice <- dim_temp[ , , 2123]
lswt_slice <- dim_temp[ , , 25]
# and why not, draw it out:
image(dim_lon, dim_lat, lswt_slice)
View(BD_sem_rep)
x <- date => 01-01-2017
x <- date > 01-01-2017
x <- date[date > 01-01-2017]
x <- date[date > 2017-01-01]
x
date
### DATA ###
nc_tmax <- nc_open("./ENSP/tx_ens_mean_0.25deg_reg_2011-2022_v27.0e.nc")
library(ncdf4)
library(lubridate)
library(tidyverse)
library(processNC)
library(terra)
library(raster)
### DATA ###
nc_tmax <- nc_open("./ENSP/tx_ens_mean_0.25deg_reg_2011-2022_v27.0e.nc")
### DATA CLEANING ###
dim_lon <- ncvar_get(nc_tmax, "longitude")
dim_lat <- ncvar_get(nc_tmax, "latitude")
dim_time <- ncvar_get(nc_tmax, "time")
dim_temp <- ncvar_get(nc_tmax, "tx", collapse_degen=FALSE)
fillvalue <- ncatt_get(nc_tmax, "tx", "_FillValue")
dim_temp[dim_temp==fillvalue$value] <- NA
t_units <- ncatt_get(nc_tmax, "time", "units") #days since 1950-01-01 00:00
t_ustr <- strsplit(t_units$value, " ")
t_dstr <- strsplit(unlist(t_ustr)[3], "-")
date <- ymd(t_dstr) + ddays(dim_time)
date
time_obs<- as.POSIXct(date, origin = "1950–01–01", tz="GMT")
lswt_slice <- dim_temp[ , , 2123]
lswt_slice <- dim_temp[ , , 25]
# and why not, draw it out:
image(dim_lon, dim_lat, lswt_slice)
?ddays
teste<- subsetNC("./ENSP/tx_ens_mean_0.25deg_reg_2011-2022_v27.0e.nc", startdate = 2017, enddate = 2022)
writeCDF(teste, "./ENSP/teste")
writeCDF(teste, "./ENSP/teste.nc")
x <- nc_open("./ENSP/teste.nc")
dim_lon <- ncvar_get(x, "longitude")
dim_lat <- ncvar_get(x, "latitude")
dim_time <- ncvar_get(x, "time")
dim_temp <- ncvar_get(x, "tx", collapse_degen=FALSE)
x
t_units <- ncatt_get(x, "time", "units") #days since 1950-01-01 00:00
t_ustr <- strsplit(t_units$value, " ")
t_dstr <- strsplit(unlist(t_ustr)[3], "-")
date <- ymd(t_dstr) + ddays(dim_time)
date
time_obs<- as.POSIXct(date, origin = "1950–01–01", tz="GMT")
lswt_slice <- dim_temp[ , , 2123]
lswt_slice <- dim_temp[ , , 25]
# and why not, draw it out:
image(dim_lon, dim_lat, lswt_slice)
lswt_vec_long <- as.vector(dim_temp)
lonlattime <- as.matrix(expand.grid(dim_lon,dim_lat,time_obs))
x
nc_tmax
rast(x)
rast("./ENSP/teste.nc")
rast(("./ENSP/tx_ens_mean_0.25deg_reg_2011-2022_v27.0e.nc"))
### DATA CLEANING ###
dim_lon <- ncvar_get(nc_tmax, "longitude")
dim_lat <- ncvar_get(nc_tmax, "latitude")
dim_time <- ncvar_get(nc_tmax, "time")
dim_temp <- ncvar_get(nc_tmax, "tx", collapse_degen=FALSE)
fillvalue <- ncatt_get(nc_tmax, "tx", "_FillValue")
t_units <- ncatt_get(nc_tmax, "time", "units") #days since 1950-01-01 00:00
t_ustr <- strsplit(t_units$value, " ")
t_dstr <- strsplit(unlist(t_ustr)[3], "-")
date <- ymd(t_dstr) + ddays(dim_time)
date
time_obs<- as.POSIXct(date, origin = "1950–01–01", tz="GMT")
range(time_obs)
nc_close("./ENSP/teste.nc")
nc <- st_read(".\\Barbara\\Cont_AAD_CAOP2020", geometry_column = "geometry")
library(googledrive)
library(sf)
library(tidyverse)
nc <- st_read(".\\Barbara\\Cont_AAD_CAOP2020", geometry_column = "geometry")
nc <- st_read("Cont_AAD_CAOP2021", geometry_column = "geometry")
ee_nc_temp <- ee_extract(
x = temps_ar,
y = nc["geometry"], #Isto tem de ser alterado depois para o que quero mesmo
scale = 250,
fun = ee$Reducer$mean(),
sf = TRUE
)
library(rgee)
ee_nc_temp <- ee_extract(
x = temps_ar,
y = nc["geometry"], #Isto tem de ser alterado depois para o que quero mesmo
scale = 250,
fun = ee$Reducer$mean(),
sf = TRUE
)
temps_ar <- ee$ImageCollection("ECMWF/ERA5_LAND/DAILY_AGGR") %>%
ee$ImageCollection$filterDate("2017-01-02", "2022-12-31") %>%
ee$ImageCollection$map(function(x) x$select("temperature_2m_min")) %>% # Select only temperature bands
ee$ImageCollection$toBands() # from imagecollection to image
rgee::ee_Initialize()
ee_check()
ee_install()
ee_clean_pyenv()
library(rgee)
rgee::ee_Initialize()
ee_install()
library(rgee)
ee_check()
